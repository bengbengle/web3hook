# 默认配置文件 
# 这里的值也可以通过设置适当的环境变量来设置，例如 SVIX_DB_DSN for db_dsn 
# 下面显示的值是默认值。注释掉的值未设置但建议使用。

# The address to listen on
listen_address = "0.0.0.0:8071"

# 用于发送操作 webhooks 的 web3hook 服务器的地址（省略/为空时禁用）发生。 
# operational_webhook_address = "http://127.0.0.1:8071"


# web3hook 使用的主要秘密。用于敏感数据的客户端加密等。
# Note：一旦设置，就不能更改。
# main_secret = "kPafCtH7KC351nWXQb2pEGa6IRW3OsYpzQJldB8X"

# 用于身份验证的 JWT 秘密 - 应该是秘密的并且是安全生成的
jwt_secret = "8KjzRXrKkd9YFcNyqLSIY8JwiaCeRc6WK4UkMnSW"

# 这决定了默认情况下为端点机密生成的密钥类型（当未设置时）。
# Supported: hmac256 (default), ed25519
# 注意：这不会影响现有的密钥，它们将继续根据创建时使用的类型进行签名。
default_signature_type = "hmac256"

# 运行服务的日志级别。支持：信息、调试、跟踪
log_level = "info"
# 所有输出将遵循的日志格式。支持：默认，json
log_format = "default"

# 将跟踪信息发送到的 OpenTelemetry 地址。省略/为空时禁用。
# opentelemetry_address = "http://localhost:4317"

# 发送到 OpenTelemetry 时采样跨度的比率。如果未给出，则默认为 # 始终发送。如果未设置 OpenTelemetry 地址，这将不执行任何操作。
# opentelemetry_sample_ratio = 1.0

# 是否在配置的日志级别启用数据库日志记录。这可能有助于分析他们的响应时间。
db_tracing = false

# 以秒为单位的所需重试计划。每个值都是重试之间等待的时间。
retry_schedule = [5,300,1800,7200,18000,36000,36000]

# 数据库的 DSN。目前只支持 postgres
db_dsn = "postgresql://postgres:postgres@pgbouncer/postgres"

# PostgreSQL 池的最大连接数。最小值为 10。
# 如果您的数据库可以处理，更高的值可以显着提高性能。
db_pool_max_size = 20

# redis 的 DSN（如果不使用 redis，可以留空）
redis_dsn = "redis://redis:6379"

# Redis 池的最大连接数。最小值为 10 
# 如果您的数据库可以处理，更高的值可以显着提高性能。
redis_pool_max_size = 20

# 使用什么样的消息队列。支持：内存、redis、rediscluster 
# Redis 后端必须配置 redis_dsn 或 queue_dsn，
# 强烈建议 在 redis 中启用持久性，这样服务器重启就不会清除队列。
queue_type = "redis"

# Redis 支持的队列的 DSN。覆盖`redis_dsn`。 (如果不使用redis可以留空)
# queue_dsn = "redis://redis:6379"

# 使用什么样的缓存。支持：内存、redis、rediscluster、无。 Redis 后端必须配置 redis_dsn 或 cache_dsn。 
# 如果只有一个实例在运行（不包括 worker），建议使用内存后端。
# 如果你有多个 API 服务器在运行，请使用 redis 后端或某些功能，可能无法正常工作。（例如幂等性）
cache_type = "memory"

# Redis 支持的缓存的 DSN。覆盖`redis_dsn`。 (如果不使用redis可以留空)
# cache_dsn = "redis://redis:6379"

# 如果为 true，则标头以 'Web3hook-' 为前缀，否则以 'web3hook-' 为前缀（默认）。
whitelabel_headers = false

# 如果为真, 则只允许 https 端点, 否则也允许 http
endpoint_https_only = false

# 端点必须持续多长时间才能被禁用。如果消息在这段时间内成功发送，则端点不会禁用。以小时计。
endpoint_failure_disable_after = 120

# 提出请求时等待多长时间 (in seconds)
worker_request_timeout = 30

# 此实例是否应运行 API
api_enabled = true

# 这个实例是否应该运行消息工作者
worker_enabled = true

# 出站 webhook 的白名单子网。 请注意， 在私有 IP 空间中允许端点存在安全风险，只有在您在内部使用该服务或用于测试目的时才应允许。
# 应以 CIDR 表示法指定 e.g,  `[127.0.0.1/32, 172.17.0.0/16, 192.168.0.0/16]`
# whitelist_subnets = []

# 产生的并发工作任务的最大数量 (0 is unlimited)
worker_max_tasks = 500